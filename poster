<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Poster Rate Calculator</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #f4f4f4;
            box-sizing: border-box;
        }
        .container {
            background-color: #fff;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            max-width: 600px;
            margin: 20px auto;
            box-sizing: border-box;
        }
        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 25px;
            font-size: 1.8em;
        }
        .input-group {
            margin-bottom: 15px;
        }
        .input-group label {
            display: block; /* Default for most labels */
            margin-bottom: 5px;
            color: #555;
            font-weight: bold;
        }
        .input-group input[type="number"],
        .input-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
            box-sizing: border-box;
        }
        .input-group input[type="number"]:focus,
        .input-group select:focus {
            border-color: #007bff;
            outline: none;
        }

        /* --- Gumming Strips Specific Styles --- */
        .gumming-strips-group {
            display: flex;
            flex-wrap: wrap; /* ALLOW WRAPPING for mobile responsiveness */
            gap: 10px;
            justify-content: space-between;
        }
        /* Styles for individual gumming input groups (Width, Height, No. of Strips) */
        .gumming-strips-group .input-group {
            flex: 1 1 calc(50% - 5px); /* On medium/small screens, two items per row */
            margin-bottom: 0; 
            
            /* Make label and input inline within this specific input group */
            display: flex;
            align-items: center; 
            gap: 5px; /* Small space between label and input */
        }
        .gumming-strips-group .input-group label {
            display: inline-block;
            margin-bottom: 0;
            flex-shrink: 0; 
            font-size: 0.9em; /* Slightly smaller font for labels to help fit */
            white-space: nowrap; /* Prevent label text from wrapping */
            text-align: right; 
            padding-right: 2px;
        }
        .gumming-strips-group .input-group input[type="number"] {
            width: auto;
            flex-grow: 1; 
            padding: 8px; 
        }

        /* Media query for very small screens: stack gumming input groups vertically */
        @media (max-width: 480px) {
            .gumming-strips-group .input-group {
                flex: 1 1 100%; /* One item per row on very small screens */
            }
        }
        /* --- END Gumming Strips Specific Styles --- */


        .calculate-button {
            display: block;
            width: 100%;
            padding: 12px;
            background-color: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            font-size: 18px;
            cursor: pointer;
            margin-top: 20px;
            transition: background-color 0.3s ease;
        }
        .calculate-button:hover {
            background-color: #0056b3;
        }
        .result {
            margin-top: 30px;
            padding: 15px;
            background-color: #e9ecef;
            border-radius: 4px;
            text-align: left;
            font-size: 16px;
            color: #333;
        }
        .result h3 {
            text-align: center;
            margin-top: 0;
            margin-bottom: 15px;
            color: #007bff;
            font-size: 1.3em;
        }
        .result p {
            margin-bottom: 8px;
            line-height: 1.4;
        }
        .result strong {
            color: #000;
        }
        .result .final-rates {
            text-align: center;
            font-size: 1.3em;
            font-weight: bold;
            margin-top: 20px;
            margin-bottom: 15px;
            padding-top: 15px;
            border-top: 1px solid #ccc;
        }
        .result .breakup-section {
            margin-top: 30px; 
            padding-top: 15px;
            border-top: 1px solid #ccc;
        }
        .result .breakup-section h4 {
            text-align: center;
            margin-bottom: 10px;
            color: #333;
            font-size: 1.1em;
        }
        .result .breakup-item {
            display: flex;
            justify-content: space-between;
            margin-bottom: 5px;
        }
        .result .breakup-item span:first-child {
            font-weight: normal;
            color: #555;
        }
        .result .breakup-item span:last-child {
            font-weight: bold;
            color: #333;
        }

        /* Desktop/Larger Screen Adjustments */
        @media (min-width: 768px) {
            .container {
                padding: 30px;
            }
            h1 {
                font-size: 2.2em;
            }
            .gumming-strips-group {
                gap: 15px;
            }
            .gumming-strips-group .input-group {
                flex: 1 1 calc(33.333% - 10px); 
                min-width: auto;
            }
            .gumming-strips-group .input-group label {
                font-size: 1em; 
            }
            .gumming-strips-group .input-group input[type="number"] {
                padding: 10px; 
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>Poster Rate Calculator</h1>

        <div class="input-group">
            <label for="qty">Quantity (Qty):</label>
            <input type="number" id="qty" name="qty" min="1" value="">
        </div>

        <div class="input-group">
            <label for="gsm">GSM (Grams Per Square Meter):</label>
            <input type="number" id="gsm" name="gsm" min="50" max="400" value="">
        </div>
<div class="input-group">
            <label for="size">Poster Size:</label>
            <select id="size" name="size">
                <option value="A4,450,4">A4 (210 x 297 mm)  
                
                </option>
                <option value="12x17.1,450,2" selected>12 x 17.1 inches </option>
                <option value="14x19,600,2">14 x 19 inches </option>
                <option value="19x29,600,1">19 x 29 inches</option>
                <option value="17.1x24,450,1">17.1 x 24 inches</option>
                <option value="letter,414,4">Letter (216 x 279 mm)</option>
                <option value="11x17,414,2">11 x 17 inches </option>
                <option value="17x22.5,414,1">17 x 22.5 inches </option>
            </select>
        </div>

        <div class="input-group">
            <label for="lamination">Lamination Type:</label>
            <select id="lamination" name="lamination">
                <option value="matt_lam">Matt Lam</option>
                <option value="gloss_lam">Gloss Lam</option>
                <option value="varnish_os">Varnish OS</option>
            </select>
        </div>
        <div class="input-group">
            <label>Gumming Strip Details:</label>
            <div class="gumming-strips-group">
                <div class="input-group">
                    <label for="gumming-width">Width (inch):</label>
                    <input type="number" id="gumming-width" name="gumming-width" min="0" step="0.1" value="0">
                </div>
                <div class="input-group">
                    <label for="gumming-height">Height (inch):</label>
                    <input type="number" id="gumming-height" name="gumming-height" min="0" step="0.1" value="1">
                </div>
                <div class="input-group">
                    <label for="gumming-strips-no">No. of Strips:</label>
                    <input type="number" id="gumming-strips-no" name="gumming-strips-no" min="0" value="3">
                </div>
            </div>
        </div>

        

        <button type="button" class="calculate-button" onclick="calculateRate()">Calculate Rate</button>

        <div class="result" id="calculationResult">
            <h3>Calculation Summary</h3>
            <p>Please enter details and click "Calculate Rate".</p>
        </div>
    </div>

    <script>
        // Map for default gumming widths (in inches)
        const defaultGummingWidths = {
            'A4': 8.5, 
            'letter': 8.5, 
            '12x17.1': 12, 
            '11x17': 11,   
            '14x19': 14,   
            '17.1x24': 17.1, 
            '19x29': 19,   
            '17x22.5': 17 
        };

        // Function to update gumming width based on selected size
        function updateGummingWidth() {
            const sizeSelectElement = document.getElementById('size');
            const selectedSizeName = sizeSelectElement.value.split(',')[0]; 
            const gummingWidthInput = document.getElementById('gumming-width');

            if (defaultGummingWidths.hasOwnProperty(selectedSizeName)) {
                gummingWidthInput.value = defaultGummingWidths[selectedSizeName];
            } else {
                gummingWidthInput.value = 0; 
            }
        }

        // Add event listener to size dropdown
        document.addEventListener('DOMContentLoaded', () => {
            const sizeSelectElement = document.getElementById('size');
            sizeSelectElement.addEventListener('change', updateGummingWidth);
            updateGummingWidth(); 
        });


        function calculateRate() {
            const qty = parseInt(document.getElementById('qty').value);
            const gsm = parseInt(document.getElementById('gsm').value);
            let gummingWidth = parseFloat(document.getElementById('gumming-width').value);
            let gummingHeight = parseFloat(document.getElementById('gumming-height').value);
            const numGummingStrips = parseInt(document.getElementById('gumming-strips-no').value);
            
            const sizeSelectElement = document.getElementById('size');
            const sizeValue = sizeSelectElement.value;
            const selectedSizeText = sizeSelectElement.options[sizeSelectElement.selectedIndex].text;
            const sizeParts = sizeValue.split(',');
            const selectedSizeName = sizeParts[0];
            const sizeBaseValue = parseFloat(sizeParts[1]);
            const sizeUps = parseInt(sizeParts[2]);

            const laminationSelectElement = document.getElementById('lamination');
            const laminationType = laminationSelectElement.value;
            const selectedLaminationText = laminationSelectElement.options[laminationSelectElement.selectedIndex].text;

            // --- Calculation for Paper Rate ---
            let wastageSheets = 0;
            const sheetsPerJob = qty / sizeUps;

            if (sheetsPerJob < 2000) {
                wastageSheets = 100;
            } else if (sheetsPerJob >= 2000 && sheetsPerJob <= 3500) {
                wastageSheets = 150;
            } else if (sheetsPerJob > 3500 && sheetsPerJob <= 5000) {
                wastageSheets = 250;
            } else {
                wastageSheets = sheetsPerJob * 0.03;
            }

            wastageSheets = Math.ceil(wastageSheets); 
            const totalSheetsNeeded = sheetsPerJob + wastageSheets;

            const paperRate = sizeBaseValue * (gsm / 3100) * (78 / 500) * totalSheetsNeeded;

            // --- Calculation for Printing Cost ---
            let printingCost = 0;
            const effectiveSheetsForPrinting = qty / sizeUps; 

            if (selectedSizeName === '14x19' || selectedSizeName === '19x29') {
                printingCost = Math.ceil(effectiveSheetsForPrinting / 1000) * 500 + 2200;
            } else {
                printingCost = Math.ceil(effectiveSheetsForPrinting / 1000) * 400 + 1600;
            }

            // --- Calculation for Lamination Cost ---
            let laminationRate = 0;
            switch (laminationType) {
                case 'matt_lam':
                    laminationRate = 0.45;
                    break;
                case 'gloss_lam':
                    laminationRate = 0.42;
                    break;
                case 'varnish_os':
                    laminationRate = 0.25;
                    break;
                default:
                    laminationRate = 0;
            }
            
            const laminationCost = sizeBaseValue * laminationRate * totalSheetsNeeded / 100;
            
            // --- Calculation for Gumming Strip Cost - Incorporating the "whichever is higher" logic ---
            let gummingStripCost = 0;
            if (gummingWidth > 0 && gummingHeight > 0 && numGummingStrips > 0) {
                // Calculate cost based on area (using inches directly as specified)
                const areaBasedCost = (gummingWidth * gummingHeight * numGummingStrips) * 1.5 * qty / 100;

                // Calculate minimum cost based on quantity (rounded up per 1000)
                const quantityBasedMinimum = Math.ceil(qty / 1000) * 450; 
                
                // Take the higher of the two costs
                gummingStripCost = Math.max(areaBasedCost, quantityBasedMinimum);
            }

            // --- Summing up all costs ---
            const totalAmount = paperRate + printingCost + laminationCost + gummingStripCost; 

            // --- Calculate Rate per Piece ---
            let ratePerPiece = 0;
            if (qty > 0) {
                ratePerPiece = totalAmount / qty;
            }

            // --- Construct the Result Summary ---
            let resultHTML = `<h3>Calculation Summary</h3>`;

            resultHTML += `<h4>Your Selections:</h4>`;
            resultHTML += `<p><strong>Quantity:</strong> ${qty}</p>`;
            resultHTML += `<p><strong>GSM:</strong> ${gsm}</p>`;
            resultHTML += `<p><strong>Size:</strong> ${selectedSizeText}</p>`;
            if (gummingWidth > 0 || gummingHeight > 0 || numGummingStrips > 0) { 
                resultHTML += `<p><strong>Gumming Strips:</strong> Width: ${gummingWidth.toFixed(2)} inch, Height: ${gummingHeight.toFixed(2)} inch, No. of Strips: ${numGummingStrips}</p>`;
            } else {
                 resultHTML += `<p><strong>Gumming Strips:</strong> None</p>`;
            }
            resultHTML += `<p><strong>Lamination:</strong> ${selectedLaminationText}</p>`;
            
            resultHTML += `<div class="final-rates">`;
            resultHTML += `<div><strong>Total Amount: ₹${totalAmount.toFixed(2)}</strong></div>`;
            resultHTML += `<div><strong>Rate per piece: ₹${ratePerPiece.toFixed(2)}</strong></div>`;
            resultHTML += `</div>`;

            resultHTML += `<div class="breakup-section">`;
            resultHTML += `<h4>Cost Breakup:</h4>`;
            resultHTML += `<div class="breakup-item"><span>Paper Cost:</span><span>₹${paperRate.toFixed(2)}</span></div>`;
            resultHTML += `<div class="breakup-item"><span>Printing Cost:</span><span>₹${printingCost.toFixed(2)}</span></div>`;
            resultHTML += `<div class="breakup-item"><span>Lamination Cost:</span><span>₹${laminationCost.toFixed(2)}</span></div>`;
            resultHTML += `<div class="breakup-item"><span>Gumming Strip Cost:</span><span>₹${gummingStripCost.toFixed(2)}</span></div>`;
            resultHTML += `</div>`;


            document.getElementById('calculationResult').innerHTML = resultHTML;

            // Console logs for debugging
            console.log(`--- Calculation Details ---`);
            console.log(`Quantity: ${qty}`);
            console.log(`GSM: ${gsm}`);
            console.log(`Gumming Width (inches): ${gummingWidth} inch, Height (inches): ${gummingHeight} inch, No. of Strips: ${numGummingStrips}`);
            console.log(`Selected Size: ${selectedSizeName} (Base Value: ${sizeBaseValue}, UPS: ${sizeUps})`);
            console.log(`Lamination Type: ${laminationType} (Rate: ${laminationRate})`);
            console.log(`Sheets per job (Qty/UPS): ${sheetsPerJob.toFixed(2)}`);
            console.log(`Wastage Sheets: ${wastageSheets}`);
            console.log(`Total Sheets Needed (Qty/UPS + Wastage): ${totalSheetsNeeded.toFixed(2)}`);
            console.log(`Calculated Paper Rate: ₹${paperRate.toFixed(2)}`);
            console.log(`Calculated Printing Cost: ₹${printingCost.toFixed(2)}`);
            console.log(`Calculated Lamination Cost: ₹${laminationCost.toFixed(2)}`);
            console.log(`Calculated Gumming Strip Cost: ₹${gummingStripCost.toFixed(2)}`);
            console.log(`Final Total Amount: ₹${totalAmount.toFixed(2)}`);
            console.log(`Rate per piece: ₹${ratePerPiece.toFixed(2)}`);
            console.log(`---------------------------`);
        }
    </script>
</body>
</html>
